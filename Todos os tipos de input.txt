<?php
/**
 * FormComponentsView
 *
 * @version    1.0
 * @package    samples
 * @subpackage tutor
 * @author     Pablo Dall'Oglio
 * @copyright  Copyright (c) 2006 Adianti Solutions Ltd. (http://www.adianti.com.br)
 * @license    http://www.adianti.com.br/framework-license
 */
class FormComponentsView extends TPage
{
    private $form;
    
    /**
     * Class constructor
     * Creates the page
     */
    public function __construct()
    {
        parent::__construct();
        
        $this->form = new BootstrapFormBuilder;
        $this->form->setFormTitle('Form components');

        // Todos os tipos de input(entrada de informação) que o adianti possui.

        //--------------------------------------Componentes de input-------------------------------------------
        $entry     = new TEntry('entry'); // Input text normal
        $numeric   = new TNumeric('numeric', 2, ',', '.', true); // Input usado apenas para números
        $date      = new TDate('date'); // Input date normal
        $datetime  = new TDateTime('datetime'); // Input date junto com a hora
        $color     = new TColor('color');  // Input para inserir uma cor
        $password  = new TPassword('password'); // Input password normal
        $spinner   = new TSpinner('spinner'); // Input onde se insere números e existem setas para aumentar/diminuir o valor que se encontra dentro dele
        $slider    = new TSlider('slider'); // Input que você vai ter uma barra de deslizamento que vc vai arrastar para definir o valor
        
        //------------------------------------Componentes de seleção-------------------------------------------
        $entryc    = new TEntry('completion'); // Inpur text normal (no programa mais tarde vai ser implementado uma função que vai auto-completar o que vc escreve nele)
        $check     = new TCheckGroup('check'); // Input checkbox normal
        $radio     = new TRadioGroup('radio'); // Input radio normal
        $combo     = new TCombo('combo'); // Input combo normal
        $select    = new TSelect('select'); // Input onde vão aparecer as opções abaixo e tu seleciona elas
        $unique    = new TUniqueSearch('unique'); // Input onde vai aparecer uma caixa pra tu digitar e procurar uma opção
        $multi     = new TMultiSearch('multi'); // // Input onde vai aparecer uma caixa pra tu digitar e procurar uma ou várias opções
        
        //---------------------------Componentes de seleção retirados do banco---------------------------------
        $db_entry  = new TDBEntry('completion2', 'samples', 'Category', 'name'); // Input text normal puxando do banco
        $db_check  = new TDBCheckGroup('db_check', 'samples', 'Category', 'id', '{name} ({id})', 'id'); // Input checkbox puxando as alternaticas do banco
        $db_radio  = new TDBRadioGroup('db_radio', 'samples', 'Category', 'id', '{name} ({id})', 'id'); // Input radio puxando as alternativas do banco
        $db_combo  = new TDBCombo('db_combo', 'samples', 'Category', 'id', '{name} ({id})', 'id'); // Input combo puxando as alternativas do banco
        $db_select = new TDBSelect('db_select', 'samples', 'Category', 'id', '{name} ({id})',  'id'); // Input onde vão aparecer as opções puxadas do banco e tu seleciona elas
        $db_unique = new TDBUniqueSearch('db_unique', 'samples', 'Category', 'id', 'name'); // Input onde vai aparecer uma caixa pra tu digitar e procurar uma opção puxada do banco
        $db_multi  = new TDBMultiSearch('db_multi', 'samples', 'Category', 'id', 'name');
        // Input onde vai aparecer uma caixa pra tu digitar e procurar uma ou várias opções puxadas do banco
        
        //--------------------------------------Componentes multi-linhas---------------------------------------
        $text      = new TText('text');
        $html      = new THtmlEditor('html');
        
        //-----------------------------Componentes de inserção de arquivos/imagens-----------------------------
        $file      = new TFile('file');
        $multifile = new TMultiFile('multifile');
        
        // Propriedades dos componentes de inserção de arquivos/imagens (Definindo que só aceita imagens)
        $file->setAllowedExtensions( ['png', 'jpg'] );
        $multifile->setAllowedExtensions( ['png', 'jpg'] );
        
        // Propriedades dos componentes de input (definindo o formato dos inputs de date e datetime e definindo os limites do spinner e do slider)
        $date->setMask('dd/mm/yyyy');
        $datetime->setMask('dd/mm/yyyy hh:ii');
        $spinner->setRange(1, 100, 10);
        $slider->setRange(0, 100, 10);
        
        
        // Definindo o placeholder do Input text que auto-completa
        $entryc->placeholder = 'type for completion...';
        
        // Definindo como vai ser exibida as informações dos input unique e multisearch que vem do banco
        $db_unique->setMask('{name} ({id})');
        $db_multi->setMask('{name} ({id})');
        
        // Definindo os valores que o Input text que se auto-completa vai poder auto-completar
        $options = [1=>'Option 1', 2 => 'Option 2', 3 => 'Option 3'];
        $entryc->setCompletion( array_values($options) );
        
        // Definindo o mínimo de caracteres nescessários para que o unique e o multisearch procurem os dados
        $unique->setMinLength(1);
        $multi->setMinLength(1);

        // Definindo o mínimo de caracteres nescessários para que o unique e o multisearch procurem os dados
        $db_unique->setMinLength(1);
        $db_multi->setMinLength(1);
        
        // Definindo as opções disponíveis nos inputs de seleção
        $check->addItems($options);
        $radio->addItems($options);
        $combo->addItems($options);
        $select->addItems($options);
        $unique->addItems($options);
        $multi->addItems($options);
        
        // Definindo o tipo de layout(organização da página) que os inputs radio e check vão ter
        $check->setLayout('horizontal');
        $db_check->setLayout('horizontal');
        $radio->setLayout('horizontal');
        $db_radio->setLayout('horizontal');
        
        // Define o tamanho dos inputs de multi-linha
        $text->setSize('100%', 170);
        $html->setSize('100%', 170);
        
        // Cria um append , Cria uma separação (Linha com o nome em cima) e insere os inputs separadamente de acordo com o seu tipo de uso (de input, seleção, multi-linha e inserção de arquivos/imagens)
        $this->form->appendPage('Single components');
        $this->form->addContent( [new TFormSeparator('Input components')] );
        $this->form->addFields( [ new TLabel('TEntry') ],   [ $entry ],   [ new TLabel('TNumeric') ],  [ $numeric ] );
        $this->form->addFields( [ new TLabel('TDate') ],    [ $date ],    [ new TLabel('TDateTime') ], [ $datetime ] );
        $this->form->addFields( [ new TLabel('TColor') ],   [ $color ],   [ new TLabel('TPassword') ], [ $password ] );
        $this->form->addFields( [ new TLabel('TSpinner') ], [ $spinner ], [ new TLabel('TSlider') ],   [ $slider ] );
        
        $this->form->addContent( [new TFormSeparator('Selection components')] );
        $this->form->addFields( [ new TLabel('TEntry') ],  [ $entryc ],  [ new TLabel('TDBEntry') ],  [ $db_entry ] );
        $this->form->addFields( [ new TLabel('TCheck') ],  [ $check ],   [ new TLabel('TDBCheck') ],  [ $db_check ] );
        $this->form->addFields( [ new TLabel('TRadio') ],  [ $radio ],   [ new TLabel('TDBRadio') ],  [ $db_radio ] );
        $this->form->addFields( [ new TLabel('TCombo') ],  [ $combo ],   [ new TLabel('TDBCombo') ],  [ $db_combo ] );
        $this->form->addFields( [ new TLabel('TSelect') ], [ $select ],  [ new TLabel('TDBSelect') ], [ $db_select ] );
        $this->form->addFields( [ new TLabel('TUnique') ], [ $unique ],  [ new TLabel('TDBUnique') ], [ $db_unique ] );
        $this->form->addFields( [ new TLabel('TMulti') ],  [ $multi ],   [ new TLabel('TDBMulti') ],  [ $db_multi ] );
        
        $this->form->appendPage('Multi line components');
        $this->form->addContent( [new TFormSeparator('Text components')] );
        $this->form->addFields( [ new TLabel('TText') ],   [ $text ] );
        $this->form->addFields( [ new TLabel('THtmlEditor') ],  [ $html ] );
        
        $this->form->appendPage('File upload components');
        $this->form->addContent( [new TFormSeparator('File components')] );
        $this->form->addFields( [ new TLabel('TFile') ],      [ $file ] );
        $this->form->addFields( [ new TLabel('TMultiFile') ], [ $multifile ] );
        
        $this->form->addAction('Send', new TAction(array($this, 'onSend')), 'fa:check-circle-o green');
        
        // Envolve a página em uma caixa que via alinhas os inputs do formulário na vertical
        $vbox = new TVBox;
        $vbox->style = 'width: 100%';
        $vbox->add(new TXMLBreadCrumb('menu.xml', __CLASS__));
        $vbox->add($this->form);

        parent::add($vbox);
    }
    
    /**
     * Post data
     */
    public function onSend($param)
    {
        $data = $this->form->getData();
        $this->form->setData($data);
        
        $win = TWindow::create('Result', 0.8, 0.8);
        $win->add( '<pre>' . print_r($data, true) . '</pre>' );
        $win->show();
    }
}
